#!/usr/bin/bash

# Copyright (C) 2020 Ayra Hikari
# Copyright (C) 2020 Ahmad Thoriq Najahi
# SPDX-License-Identifier: GPL-3.0-only

# Initialization

mainmenu () {
	clear
	echo -e "Welcome to Nana setup wizard!"
	echo -e "Press 1 to install Nana"
	echo -e "Press 2 to update Nana"
	echo -e "Press 3 to enter setup wizard"
	echo -e "Press 4 to install requirements"
	echo -e "Press 5 to configure postgresql"
	echo -e "Press x to exit the script"
	read -n 1 -p "Input Selection: " mainmenuinput
	if [ "$mainmenuinput" = "1" ]; then
		install_nana
	elif [ "$mainmenuinput" = "2" ]; then
		update_nana
	elif [ "$mainmenuinput" = "3" ]; then
		setup_wizard
	elif [ "$mainmenuinput" = "4" ]; then
		install_req
	elif [ "$mainmenuinput" = "5" ]; then
		config_postgres "$@"
	elif [ "$mainmenuinput" = "x" ] || [ "$mainmenuinput" = "X" ]; then
		quitprogram
	else
		echo -e "\nYou have entered an invalid selection!"
		echo -e "Please try again!"
		echo -e "Press any key to continue..."
		read -n 1
		clear
		mainmenu
	fi
}

install_nana () {
	clear
	echo -e "Select your system machine"
	echo -e "Press 1 if using linux"
	echo -e "Press 2 if using android (termux)"
	# echo -e "Press 3 if using android"
	read -n 1 -p "Input Selection: " install_nana_input
	if [ "$install_nana_input" = "1" ]; then
		install_nana_linux
	elif [ "$install_nana_input" = "2" ]; then
		install_nana_termux
	#elif [ "$install_nana_input" = "3" ]; then
	#	install_nana_win
	else
		echo -e "\nYou have entered an invalid selection!"
		echo -e "Please try again!"
		echo -e "Press any key to continue..."
		read -n 1
		clear
		install_nana
	fi
}

install_nana_linux () {
	clear
	echo -e "Installing postgres..."
	sudo apt install -y postgresql
	echo -e "Installing requirements..."
	sudo apt update -y && sudo apt install -y git postgresql python3 python3-pip libpq-dev
	if ! sudo apt install -y python-psycopg2; then
		sudo apt install -y python3-psycopg2
	fi
	echo -e "Installing python requirements..."
	sudo pip3 install -r requirements.txt
	config_postgres
}

install_nana_win () {
	clear
	echo -e "You need to install Python and Postgres manual to do this"
	echo -e "Make sure you've installed python from https://www.python.org/downloads/"
	echo -e "And for postgres, you can install from https://www.postgresql.org/download/windows/"
	echo -e "If you've installed python and postgres on your machine, please enter"
	echo -e "Press any key to continue..."
	read -n 1
	config_postgres
}

install_nana_termux () {
	clear
	echo -e "Installing postgres and their requirements..."
	pkg update -y && pkg install -y postgresql
	echo -e "Installing requirements..."
	pkg install -y clang git postgresql python libcrypt libjpeg-turbo
	echo -e "Installing python requirements..."
	sudo pip3 install -r requirements.txt
	initdb ~/pg
	pg_ctl -D ~/pg start
	config_postgres
}

config_postgres () {
	clear
	echo -e "Welcome to postgres setup!"
	read -p "Please input your postgres account name (ex: nana): " post_uname
	read -p "Please input your postgres account password (ex: nanabot): " post_pass
	read -p "Please input your postgres database name (ex: nanadb): " post_db
	clear
	echo -e "Postgres username: ${post_uname}"
	echo -e "Postgres password: ${post_pass}"
	echo -e "Postgres db name : ${post_db}"
	echo -e "URL: postgres://${post_uname}:${post_pass}@localhost:5432/${post_db}"
	read -n 1 -p "Is that corrects? [Y/N] " check
	if [ "$check" = "y" ] || [ "$check" = "Y" ]; then
		echo -e " "
		echo -e "Creating database..."
		if ! sudo -u postgres createuser -s -i -d -r -l -w "$post_uname"; then
			echo -e "Error when executing command: '$1'"
			exit $ERROR_CODE
		fi
		if ! sudo -u postgres psql -c "ALTER ROLE ${post_uname} WITH PASSWORD '$post_pass';" >> /dev/null; then
			echo -e "Error when executing command: '$1'"
			exit $ERROR_CODE
		fi
		sudo -u postgres createdb -O "${post_uname}" "${post_db}"
		echo -e "postgres://${post_uname}:${post_pass}@localhost:5432/${post_db}" > nana/session/postgres
		echo -e "Postgres was created: postgres://${post_uname}:${post_pass}@localhost:5432/${post_db}"
		read -n 1
		setup_wizard
	elif [ "$check" = "n" ] || [ "$check" = "N" ]; then
		unset post_uname post_pass post_db
		config_postgres
	else
		echo -e "\nNon-acceptable entry ... Press enter to continue"
		read -n 1
		config_postgres
	fi
	setup_wizard
}

setup_wizard () {
	clear
	echo -e "You need to create an app in telegram"
	echo -e "Go to https://my.telegram.org/apps"
	echo -e "Fill: App title, Short name, URL, Platform, Description\n"
	echo -e "Example:"
	echo -e "App title   : Nana Userbot"
	echo -e "Short name  : Nana"
	echo -e "URL         : https://github.com/AyraHikari/Wiki-Nana-TgBot/wiki"
	echo -e "Platform    : Other"
	echo -e "Description : Linux\n"
	echo -e "If done, please any key to continue"
	read -n 1
	read -p "Insert api_id: " api_id
	read -p "Insert api_hash: " api_hash
	read -p "Insert your language code (ex: en): " lang_code
	echo -e "\nYou need to create a bot in @botfather from telegram"
	echo -e "PM bot father with command /newbot"
	echo -e "Insert your assistant bot name"
	echo -e "Insert your assistant bot user name"
	echo -e "Copy token from @botfather, and enter in here\n"
	read -p "Please insert assistant token: " assist_token
	echo -e "Creating configs..."
	echo """# Create a new file in the dir config.py and import the same, then extend this class.
class Config(object):
	LOGGER = True

	# Must be filled!
	# Register here: https://my.telegram.org/apps
	api_id = ${api_id}
	api_hash = "\"${api_hash}\""
	DATABASE_URL = "\"$(cat nana/session/postgres)\"" # Your database URL

	# Version
	lang_code = \"en\" # Your language code
	device_model = \"PC\" # Device model
	system_version = \"Linux\" # OS system type

	# Use real bot for Assistant
	# Pass False if you dont want
	ASSISTANT_BOT = True
	ASSISTANT_BOT_TOKEN = "\"${assist_token}\""

	# Required for some features
	AdminSettings = [] # Insert int id, Add someone so they can access your assistant, leave it blank if you dont want!
	Command = [\".\"] # Insert command prefix, if you insert \"!\" then you can do !ping
	# WORKER must be int (number)
	NANA_WORKER = 8
	ASSISTANT_WORKER = 2
	# If True, send notification to user if Official branch has new update after running bot
	REMINDER_UPDATE = True

	# APIs token
	thumbnail_API = \"\" # Register free here: https://thumbnail.ws/
	screenshotlayer_API = \"\" # Register free here: https://screenshotlayer.com/
	lydia_API = \"\"

	# Load or no load plugins
	# userbot
	USERBOT_LOAD = []
	USERBOT_NOLOAD = []
	# manager bot
	ASSISTANT_LOAD = []
	ASSISTANT_NOLOAD = []

	# Fill this if you want to login using session code, else leave it blank
	USERBOT_SESSION = \"\"
	ASSISTANT_SESSION = \"\"

	# Google drive API, open client_secrets.json file, copy all text, and paste into ""\"{THIS IS API}\"""
	#   If you dont have, leave it blank!
	GOOGLE_API_TEXT = \"\"\"Replace this text with your API\"\"\"

	# Bitly API, register at https://dev.bitly.com/my_apps.html
	BITLY_API = \"\"

	# Pass True if you want to use test mode
	TEST_MODE = False

class Production(Config):
	LOGGER = False


class Development(Config):
	LOGGER = True
""" > nana/config.py
	setup_done
}

setup_done() {
	clear
	echo -e "All setup done, you ready to go!"
	echo -e "To run nana userbot, type:"
	echo -e "python3 -m nana"
	read -n 1 -p "Would you like to run nana now? [Y/N] " want_run
	if [ "$want_run" = "y" ] || [ "$want_run" = "Y" ]; then
		echo -e "Running nana..."
		python3 -m nana
	elif [ "$want_run" = "n" ] || [ "$want_run" = "N" ]; then
		echo -e "\nOk then, you can run it with command above"
		exit 0
	else
		echo -e "\nNon-acceptable entry ... Press enter to continue"
		read -n 1
		setup_done
	fi
}

install_req () {
 	clear
	echo -e "Select your system machine"
	echo -e "Press 1 if using linux"
	echo -e "Press 2 if using android (termux)"
	# echo -e "Press 3 if using android"
	read -n 1 -p "Input Selection: " install_nana_input
	if [ "$install_nana_input" = "1" ]; then
		echo -e "\nInstalling requirements..."
		sudo apt update -y && sudo apt install -y git postgresql python3 python3-pip libpq-dev
		if ! sudo apt install -y python-psycopg2; then
			sudo apt install -y python3-psycopg2
		fi
		echo -e "Installing python requirements..."
		sudo pip3 install -r requirements.txt
		echo -e "Installing postgres..."
		sudo apt update -y && sudo apt install -y postgresql
	elif [ "$install_nana_input" = "2" ]; then
		echo -e "\nInstalling requirements..."
		pkg update && pkg install clang git postgresql python libcrypt libjpeg-turbo
		echo -e "Installing python requirements..."
		sudo pip3 install -r requirements.txt
		echo -e "Installing postgres..."
		pkg update && pkg install postgresql
		initdb ~/pg
		pg_ctl -D ~/pg start
	#elif [ "$install_nana_input" = "3" ]; then
	#	install_nana_win
	else
		echo -e "\nYou have entered an invallid selection!"
		echo -e "Please try again!"
		echo -e "Press any key to continue..."
		read -n 1
		clear
		install_nana
	fi
}

update_nana () {
	clear
	echo -e "Updating..."
	git config --global credential.helper "cache --timeout=72000"
	git pull
}

quitprogram () {
	echo -e "Setup was exit"
	exit 0
}

mainmenu
